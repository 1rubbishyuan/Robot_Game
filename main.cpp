#include "mymainwindow.h"
#include"startwindow.h"
#include <QApplication>

int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    startwindow w;
    w.show();
    return a.exec();
}
//背景，按钮样式的更改，点击声音的添加是容易的
//比较复杂的是动画的实现
//动画一：开始按钮的点击（这是容易的）//拿下
//动画二：游戏内选择操作的按钮的状态改变（这是容易的）（考虑使用输入换成可输入的文本框不用按钮了）//已使用按钮拿下
//问题（改变文本框底色）（输入时就是美观的文字）(目的是把每一步还要记录在画面中方便后续显示第几步)
//动画三：机器人的移动，输入输出块区的变动（还有当前第几步的现实）（机器人移动为一个模块）（步数显示为一个模块）
//显示第几步使用一个对话框在playwindow的右侧，用一个textbrower来显示每一步操作
//游戏开始就弹出每输入一条指令就在右边显示出来方便后续光标移动
//使用sleep函数来阻断程序的运行从而保证机器人动画的实现,可以先判断再实现动画
//void动画函数达到设置的时间后再return来实现动画（试试）
//除了jump函数外都需要一个动画函数，动画函数之间的关联与game函数基本一致,操作直接从s[]里面访问
//机器人动画的实现机器人部分可能可以用坐标来完成动画
//物块部分
//in部分采用new出ik个物块的形式（关键在于获取坐标）
//mid不分采取本身就有物块，然后是否显示的方式（关键在于获取坐标和显示以及关闭的时间）
//out位置放一个判定区域到达那个区的物块就会消失（尝试采取空图片的方式）（坐标判据，如何消失）
//外带一个状态：前置关卡完成后置关卡才开启（还是写文件)(在一次游戏内可以使用信号)//拿下
//胜利信号传入selectwindow后将下一个按钮的状态改变，同时改变该按钮的状态
//改变方法为调用该按钮中的函数，我设置三个函数，每个函数执行时会发送一个信号
//而这个信号会传送到这个按钮的构造函数中将这个按钮的状态改变（状态包括是否可选，图片样式）
